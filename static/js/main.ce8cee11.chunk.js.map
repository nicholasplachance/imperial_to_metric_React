{"version":3,"sources":["logo.svg","components/inputs/inputs.component.jsx","components/input-card/input-card.component.jsx","components/category-select/select-category.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Input","props","className","key","unit","id","name","placeholder","type","onChange","handleChange","InputCard","state","category","map","SelectCategory","categorySelect","value","App","feetConversion","array","num","mileConversion","meterConversion","kilometerConversion","poundConversion","usTonConversion","gramConversion","kilogramConversion","e","feet","document","querySelector","miles","meters","kilometers","pound","ton","gram","kilogram","target","querySelectorAll","console","log","setState","resetCategory","length","mass","this","src","logo","alt","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce8cee11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport './inputs.style.css';\r\n\r\nexport const Input = props => {\r\n\treturn (\r\n\t\t<div className=\"form\" key={props.unit.id}>\r\n\t\t\t<label>{props.unit.name}</label>\r\n\t\t\t<input\r\n\t\t\t\tid={props.unit.name}\r\n\t\t\t\tplaceholder={props.unit.name}\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tonChange={props.handleChange}\r\n\t\t\t></input>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport './input-card.style.css';\r\nimport { Input } from '../inputs/inputs.component';\r\n\r\nexport const InputCard = props => {\r\n\treturn (\r\n\t\t<div className=\"form-card\">\r\n\t\t\t{props.state[props.state.category].map(unit => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Input key={unit.id} unit={unit} handleChange={props.handleChange} />\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport \"./select-category.style.css\"\r\n\r\nexport const SelectCategory = props => {\r\n\treturn (\r\n\t\t<div className=\"category-select\">\r\n\t\t\t<label>Categories</label>\r\n\t\t\t<select name=\"category\" onChange={props.categorySelect}>\r\n\t\t\t\t<option value=\"\"></option>\r\n\t\t\t\t<option value=\"length\">Length</option>\r\n\t\t\t\t<option value=\"mass\">Mass</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { InputCard } from './components/input-card/input-card.component';\nimport { SelectCategory } from './components/category-select/select-category.component';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tlength: [\n\t\t\t\t{ id: 1, name: 'feet' },\n\t\t\t\t{ id: 2, name: 'miles' },\n\t\t\t\t{ id: 3, name: 'meters' },\n\t\t\t\t{ id: 4, name: 'kilometers' }\n\t\t\t],\n\t\t\tmass: [\n\t\t\t\t{ id: 1, name: 'pound' },\n\t\t\t\t{ id: 2, name: 'US-ton' },\n\t\t\t\t{ id: 3, name: 'gram' },\n\t\t\t\t{ id: 4, name: 'kilogram' }\n\t\t\t],\n\t\t\tcategory: ''\n\t\t}\n\t}\n\n\tfeetConversion = (array, num) => {\n\t\tarray[0].value = num / 5280\n\t\tarray[1].value = num / 3.281\n\t\tarray[2].value = num / 3281\n\t}\n\n\tmileConversion = (array, num) => {\n\t\tarray[0].value = num * 5280\n\t\tarray[1].value = num * 1609.34\n\t\tarray[2].value = num * 1.609\n\t}\n\n\tmeterConversion = (array, num) => {\n\t\tarray[0].value = num * 3.281\n\t\tarray[1].value = num / 1609.34\n\t\tarray[2].value = num / 1000\n\t}\n\n\tkilometerConversion = (array, num) => {\n\t\tarray[0].value = num * 3281\n\t\tarray[1].value = num / 1.609\n\t\tarray[2].value = num * 1000\n\t}\n\n\tpoundConversion = (array, num) => {\n\t\tarray[0].value = num / 2000\n\t\tarray[1].value = num * 454\n\t\tarray[2].value = num / 2.205\n\t}\n\n\tusTonConversion = (array, num) => {\n\t\tarray[0].value = num * 2000\n\t\tarray[1].value = num * 907185\n\t\tarray[2].value = num / 907\n\t}\n\n\tgramConversion = (array, num) => {\n\t\tarray[0].value = num / 454\n\t\tarray[1].value = num / 907185\n\t\tarray[2].value = num / 1000\n\t}\n\n\tkilogramConversion = (array, num) => {\n\t\tarray[0].value = num * 2.205\n\t\tarray[1].value = num / 907\n\t\tarray[2].value = num * 1000\n\t}\n\n\thandleChange = e => {\n\t\tconst feet = document.querySelector(\"#feet\")\n\t\tconst miles = document.querySelector(\"#miles\")\n\t\tconst meters = document.querySelector(\"#meters\")\n\t\tconst kilometers = document.querySelector(\"#kilometers\")\n\t\tconst pound = document.querySelector(\"#pound\")\n\t\tconst ton = document.querySelector(\"#US-ton\")\n\t\tconst gram = document.querySelector(\"#gram\")\n\t\tconst kilogram = document.querySelector(\"#kilogram\")\n\n\t\tif (e.target.id === 'feet') {\n\t\t\tthis.feetConversion([miles, meters, kilometers], e.target.value)\n\t\t}\n\t\tif (e.target.id === 'miles') {\n\t\t\tthis.mileConversion([feet, meters, kilometers], e.target.value)\n\t\t}\n\t\tif (e.target.id === 'meters') {\n\t\t\tthis.meterConversion([feet, miles, kilometers], e.target.value)\n\t\t}\n\t\tif (e.target.id === 'kilometers') {\n\t\t\tthis.kilometerConversion([feet, miles, meters], e.target.value)\n\t\t}\n\t\tif (e.target.id === 'pound') {\n\t\t\tthis.poundConversion([ton, gram, kilogram], e.target.value)\n\t\t}\n\t\tif (e.target.id === 'US-ton') {\n\t\t\tthis.usTonConversion([pound, gram, kilogram], e.target.value)\n\t\t}\n\t\tif (e.target.id === 'gram') {\n\t\t\tthis.poundConversion([pound, ton, kilogram], e.target.value)\n\t\t}\n\t\tif (e.target.id === 'kilogram') {\n\t\t\tthis.poundConversion([pound, ton, gram], e.target.value)\n\t\t}\n\t};\n\n\tcategorySelect = e => {\n\t\tconst categories = document.querySelectorAll('option');\n\t\tconsole.log(e.target.value);\n\t\tthis.setState({ category: e.target.value });\n\t};\n\n\tresetCategory = () => {\n\t\tthis.setState({ category: '' });\n\t};\n\n\trender() {\n\t\tif (this.state.category === '') {\n\t\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<div className=\"App-header\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t\t\t\t\t\t<p>Imperial to Metric React App</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<SelectCategory categorySelect={this.categorySelect} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"App-header\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t\t\t\t\t<p>Imperial to Metric React App</p>\n\t\t\t\t\t\t<InputCard state={this.state} handleChange={this.handleChange} />\n\t\t\t\t\t\t{console.log(document.querySelectorAll('input'))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<button className=\"reset-button\" onClick={this.resetCategory}>Category Select</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}